{
	"name": "Full Auto CI",
	"dockerComposeFile": "docker-compose.yml",
	"service": "app",
	"workspaceFolder": "/workspaces/full_auto_ci",
	"overrideCommand": true,
	
	// Configure tool-specific properties.
	"customizations": {
		"vscode": {
			"settings": { 
				"python.defaultInterpreterPath": "/usr/local/bin/python",
				"python.linting.enabled": true,
				"python.linting.pylintEnabled": true,
				"python.formatting.autopep8Path": "/usr/local/py-utils/bin/autopep8",
				"python.formatting.blackPath": "/usr/local/py-utils/bin/black",
				"python.formatting.yapfPath": "/usr/local/py-utils/bin/yapf",
				"python.linting.banditPath": "/usr/local/py-utils/bin/bandit",
				"python.linting.flake8Path": "/usr/local/py-utils/bin/flake8",
				"python.linting.mypyPath": "/usr/local/py-utils/bin/mypy",
				"python.linting.pycodestylePath": "/usr/local/py-utils/bin/pycodestyle",
				"python.linting.pydocstylePath": "/usr/local/py-utils/bin/pydocstyle",
				"python.linting.pylintPath": "/usr/local/py-utils/bin/pylint",
				"python.formatting.provider": "black",
				"editor.formatOnSave": true,
				"editor.codeActionsOnSave": {
					"source.organizeImports": "explicit"
				},
				"python.testing.pytestEnabled": true,
				"python.testing.unittestEnabled": false,
				"python.testing.nosetestsEnabled": false,
				"python.testing.pytestArgs": [
					"tests"
				],
				"editor.rulers": [
					88
				]
			},
			
			"extensions": [
				"ms-python.python",
				"ms-python.vscode-pylance",
				"ms-python.black-formatter",
				"ms-python.pylint",
				"ms-python.isort",
				"ms-azuretools.vscode-docker",
				"yzhang.markdown-all-in-one",
				"streetsidesoftware.code-spell-checker",
				"eamodio.gitlens"
			]
		}
	},

	"features": {
		"ghcr.io/devcontainers/features/git:1": {
			"version": "latest"
		},
		"ghcr.io/devcontainers/features/github-cli:1": {
			"version": "latest"
		}
	},

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	"forwardPorts": [5000],

	// Use 'postCreateCommand' to run commands after the container is created.
	"postCreateCommand": "pip install --user -e \".[api,dashboard,dev]\" && sh ./.devcontainer/init_dev_env.sh",

	// Set `remoteUser` to `root` to connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
	"remoteUser": "vscode"
}
